// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model departments {
  id         String    @id() @default(uuid())
  name       String
  short_name String
  code       String
  status     Boolean   @default(false)
  users      users[]   @relation("departmentUser")
  created_at DateTime? @default(now())
  updated_at DateTime? @updatedAt
}

model positions {
  id         String    @id() @default(uuid())
  name       String
  code       String
  status     Boolean   @default(false)
  created_at DateTime? @default(now())
  updated_at DateTime? @updatedAt
  users      users[]   @relation("positionUser")
}

model roles {
  id         String    @id() @default(uuid())
  name       String
  code       String
  status     Boolean   @default(false)
  created_at DateTime? @default(now())
  updated_at DateTime? @updatedAt
  users      users[]   @relation("roleUser")
  reports    reports[] @relation("roleReport")
}

model users {
  id                  String      @id() @default(uuid())
  full_name           String
  staff_id            String      @unique
  username            String      @unique
  password            String
  password_expired    DateTime?
  password_reseted_at DateTime?
  status              Boolean     @default(false)
  department          departments @relation("departmentUser", fields: [department_id], references: [id])
  position            positions   @relation("positionUser", fields: [position_id], references: [id])
  role                roles       @relation("roleUser", fields: [role_id], references: [id])
  department_id       String
  position_id         String
  role_id             String
  created_at          DateTime?   @default(now())
  updated_at          DateTime?   @updatedAt

  @@index([department_id])
  @@index([position_id])
  @@index([role_id])
}

model reports {
  id         String          @id() @default(uuid())
  name       String
  code       String?
  status     Boolean         @default(false)
  role       roles           @relation("roleReport", fields: [role_id], references: [id])
  role_id    String
  columns    reportColumns[] @relation("columnsReport")
  params     reportParams[]  @relation("paramsReport")
  created_at DateTime?       @default(now())
  updated_at DateTime?       @updatedAt

  @@index([role_id])
}

model reportColumns {
  id         String    @id() @default(uuid())
  display    String
  name       String
  type       String
  status     Boolean   @default(false)
  report     reports   @relation("columnsReport", fields: [report_id], references: [id])
  report_id  String
  ordering   BigInt?   @default(0)
  created_at DateTime? @default(now())
  updated_at DateTime? @updatedAt

  @@index([report_id])
}

model reportParams {
  id         String    @id() @default(uuid())
  display    String
  name       String
  type       String
  status     Boolean   @default(false)
  report     reports   @relation("paramsReport", fields: [report_id], references: [id])
  report_id  String
  created_at DateTime? @default(now())
  updated_at DateTime? @updatedAt

  @@index([report_id])
}
